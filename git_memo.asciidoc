
GitHub memo
===========
:Author Initials:
:toc:
:icons:
:numbered:
:website: http://asciidoc.org/

== 各種設定

エディタの設定。aliasで呼び出す設定の場合NGなので、下記のように絶対バスを指定すること。

----
git config core.editor /usr/local/vim74/bin/vim.exe
----


[WARNING]
====

Commitログメッセージの文字コードはUTF-8とすること。
vimなら_vimrcに以下の設定を追加しておけばよい。

----
autocmd FileType gitcommit setlocal fenc=utf-8
autocmd FileType gitcommit setlocal ff=unix
----

====


== リポジトリ作成

----
git init
----

カレントディレクトリ以下に.gitディレクトリが作成され、
そこにリポジトリの情報が格納される。

git initの時点で、masterというブランチが作成される。

== リポジトリを削除
リポジトリの.gitファイルを削除するだけ。

== ファイルの追加

ステージ領域にファイルを追加するには、下記コマンドを実行

----
git add (ファイル名)
----

[NOTE]
addはsvnにおけるaddとは異なる。commitに含めるファイルを指定する、という考え方。

=== キャンセルするには

ステージ領域に追加したことだけをキャンセル(つまりファイルは残る)する場合

----
git rm --cached (ファイル名)
----

ファイル削除も行いたい場合

----
git rm -f (ファイル名)
----


== ファイルのCommit(現在のブランチに対して)

.ログメッセージをエディタで編集する場合
----
git commit
----

変更内容も確認しながらCommitしたい…

----
git commit -v
----

.ログメッセージを指定してCommitする場合
----
git commit -m "(ログメッセージ)"
----


== リモートリポジトリの登録

----
git remote add (リモートリポジトリ識別子) (GitHub上のURL)
----

例

----
git remote add github_dotfiles git@github.com:jumichi11/dotfiles
----

(上でダメだったら…)

----
git remote add github_dotfiles https://github.com/jumichi11/dotfiles
----

上記コマンドを実行すると、リモートリポジトリは +github_dotfiles+ という識別子でアクセスできるようになる。
(以下のgit pushの例を参照)


リモートリポジトリの確認は、以下のコマンドで可能

----
git remote -v
----

== リモートリポジトリの変更の取り込み

----
git pull
----


== リモートリポジトリへ送信

何もCommitされていない状態からの送信

----
git push --set-upstream (リモートリポジトリ識別子) (リモートリポジトリのブランチ名)
----

すでにCommitされている状態からの送信

----
git push -u (リモートリポジトリ識別子) (リモートリポジトリのブランチ名)
----

例:git@github.com;jumichi11/dotfilesリポジトリのmasterブランチに送信する場合

----
git push -u github_dotfiles master
----

[NOTE]
push前には、一度pullをしておく。

== コンフリクトの解消

コンフリクトが発生すると、下記のようなメッセージが出力される。

----
$ git pull
Auto-merging _vimrc
CONFLICT (content): Merge conflict in _vimrc
Automatic merge failed; fix conflicts and then commit the result.
----

解消する手順は以下の通り。

. コンフリクトが発生したファイルを開く
. コンフリクト発生箇所が以下のように表示されるので、取り込まない方を削除する。
+
----
<<<<<<< HEAD
commit インデックスの状態を記録する
=======
pull リモートリポジトリの内容を取得する
>>>>>>> issue3
----
. この状態で一度git addして、git commitを行う。

== リビジョンを戻す

リビジョンを戻すには、以下のようなコマンドを実行する。

----
git checkout (リポジトリのハッシュ名)
----

現在のブランチの最新から、相対的に戻りたいときは、以下のようなコマンドを実行する。
(下記の例は、最新から3つ前に戻る場合)

----
git checkout HEAD~3
----

または

----
git checkout HEAD~~~
----

[WARNING]
====
リポジトリを最新に戻す場合(HEADが移動することと同じ意味)、下記コマンドでブランチの最新に戻すこと。

----
git checkout (ブランチ名)
----

====

== Git学習サイト

Gitの各種ブランチ操作コマンドがどのように動作するのかをグラフィカルに確認することができる。

http://k.swd.cc/learnGitBranching-ja/?NODEMO[Learning Git Branching]

////

== CheatSheet

http://powerman.name/doc/asciidoc[cheatsheet]

image::./images/scilab_plot_exsample_original.png[image]

.table1
[cols="1,1,1",options="header",width="50%"]
|==================================
 |      | col1 | col1
 | row1 | col1 | col2
 | row2 | col1 | col2
|==================================

== teststest
sjdkfasdjfksjfk

////

