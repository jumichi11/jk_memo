
signal analyze
==============
Junichi Kobayashi <junichi.kobayashi@pioneer.onkyo.com>
:Author Initials:
:toc:
:icons:
:numbered:
:website: http://asciidoc.org/


== 信号のキャプチャ方法に関して

=== I2S信号キャプチャ

.オシロスコープのSPI解析機能の利用

オシロスコープに内蔵されている、SPI解析機能を使った信号解析方法。メリット、デメリットは以下の通り。

メリット::
テキストデータによる解析ができる。簡単にグラフ化できる。
デメリット::
キャプチャ時間が短い。実際の音声を聴けない(短すぎる)

解析手順は、以下の通り。

. DATA/LRCK/BCKの3本を引っ張り出す
. CH1にLRCK, CH2にDATA, CH3にBCKを接続
. SPI解析機能にて、CH1にChipSelect, CH2にData, CH3にClockをアサイン
. ChipSelectの論理をLにする
. 必要に応じて、L/H判別閾値、ヒステリシス等を設定する
. SPI解析機能のDisplayをOnにする。このとき、デジタルデータが表示されなければ、設定が間違っている可能性あるので、再確認する
. 時間軸のレンジを10-20msに設定
. オシロの性能にもよるが、サンプル数をできる限り高い値に設定する
. 波形を試しにキャプチャしてみる。各デジタル波形がなまったり、歪んだりしていないことを確認
. Stopを押し、SPI解析結果を保存する
. +I2S解析原本.xlsx+ のC列に、データを貼り付け。結果がH列に出力されるので、グラフに起こす。

[TIP]
===========================================
I2Sの信号は、WordSelect(LRCK)が変化直後のクロックサイクルはLSBであり、次のデータのMSBはその次のサイクル、
といったように1クロックサイクルずれている。

image:images/I2S_DataTiming.png[I2S_DataTiming]

そのため、SPIデータとしてキャプチャしたものをそのまま数値に変換するとおかしくなる。
+I2S解析原本.xlsx+ では、SPIデータを最終的に1bit左にシフトした値がH列に出力される。
(1bitシフトするので、LSBのデータは失われるが、たかだか32bitのLSB程度のデータが失われても、信号分析にそんなに影響はない)

===========================================

.DITを使う方法

既存の製品や、電子部品ショップに売っているのDIT機能を使い、S/PDIF信号に変換して出力し、録音や再生を行う信号解析方法。
メリット、デメリットは以下の通り。

メリット::
長時間再生、録音が可能。実際の音声を聴くことができる。
デメリット::
機材の準備が面倒。立ち上がりの早い信号は、配線等の影響が怖い。



=== DSD信号キャプチャ

.DSD信号から出力音声を確認する
DSD信号は 'ノイズシェービング' という技術によって、1bitという荒い量子化を行ったときに発生するノイズ(量子化ノイズ)
成分をフィードバック/微分/積分回路によって、可聴帯域より高い周波数に追い出すものであり、
そのスペクトルの実体は、 +
[blue]*信号の周波数成分+量子化ノイズの周波数成分*. +
となっているため、信号そのものに量子化ノイズ周波数成分のみ取り除くようなローパスフィルタをかけると、信号が抽出できる。
(CR型のローパスフィルタ回路で十分らしい。)

.Playerもしくはソースのデバイスが出力してるDataがPCM信号なのか、DSD信号なのか判断する
Playerを一時停止にする、または、コンテンツがあれば、サイレントのコンテンツを再生する。
Dataに何かしら出力され、そのパルス密度が均等(DSDの規定だと0x69らしい)であれば、DSD、Logic Lレベルに張り付いていればPCM、と判断できる。


=== S/PDIF信号キャプチャ

TTL論理レベルの信号は、市販のTOSLINKコネクタで変換できる。
これで、HDMIやその他デバイスからのS/PDIF信号を変換し、実績のあるレシーバーに入力することで、
そのS/PDIF信号に問題がないかどうか、判別できる。

[TIP]
.TTLとは
===========================================

Transistor-transitor logicの略。
デジタル回路の一種ことだが、 +TTL互換論理レベル+ の意味で使われることもある。
TTL互換論理レベルは、

L電圧:: +0V - 0.8V+
H電圧:: +2V - Vcc+

となるらしい。

===========================================

== 信号解析方法

=== レベルの妥当性確認

.Analogの場合
入力信号レベルと、Volume値で決まる

.Digitalの場合(A/D経路)


.Digitalの場合(A/D以外)
入力信号レベル()DACのFull Scale Output Level(大概2Vrms)とVolume値

[source,python]
if n < 0: print 'Hello World!'

["latex","latex1.png",align="center"]
---------------------------------------------------------------------
$\displaystyle{ V_i = C_0 - C_3
\frac{C_1\cos(\theta_i+C_3)}{C_4+C_1\cos(\theta_i+C_2)} }$
---------------------------------------------------------------------


