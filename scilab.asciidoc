
scilab
======
Junichi Kobayashi <junichi.kobayashi@pioneer.onkyo.com>
:Author Initials:
:toc:
:icons:
:numbered:

== 何ができるのか？

以下のようなことができる。

- FFT演算
- フィルタ演算(畳み込み演算)
- FIRフィルタ係数の算出
- IIRフィルタ係数の算出(まだやったことない…)
- 係数から伝達関数を求め、その特性を取得(まだやったことない…)
- wavファイルからデータを読み込んで、各種演算を行い、wavファイルに結果を書き出すことができる。(まだやったことない…)

これらを応用すると、以下のようなことが可能。

- 信号の周波数特性、位相特性の確認
- フィルタの特性確認
- 自作したフィルタの妥当性確認

== インストール

.Windows版
. http://www.scilab.org/download/5.5.1[scilabホームページよりダウンロード]
. インストーラを実行

.Linux/cygwin版
(作成中…まだ試したことはない…)

== 使い方

=== 基本コマンド

コンソールからの実行が基本動作。

.ディレクトリ操作
+dir+:: カレントディレクトリの内容表示
+cd+:: ディレクトリの移動
+pwd+:: カレントディレクトリのパスを表示

.配列(ベクトル)定義
+t=0:1/100:1+:: 行ベクトルとして0から1までを0.01刻みで定義。
+t=t'+:: 行ベクトル・列ベクトルの転置

.グラフプロット
+plot(a)+:: aの配列の値がy軸にプロットされる。x軸は配列の要素番号となる。
+plot(a,b)+:: aの配列をx軸、bの配列の値がy軸にプロットされる

TIP: 変数は '変数ブラウザ' で確認が可能。そのままコピーもできる。

=== FFT

テキストとして保存したデータをFFTするときの例。


----
cd ruby_project\ <1>
fp=mopen("dsd_data_2048sample.csv") <2>
data=mfscanf(-1,fp,"%f") <3>
mclose(fp) <4>

fft_out=fft(data) <5>
fft_abs=abs(fft_out) <6>
plot(fft_abs) <7>

----
<1> 数値データのテキストファイルが存在するフォルダに移動
<2> ファイルをオープン
<3> データを読み込み。-1は現在のファイルポインタから全てのデータを読み出す、という意味であり、それ以外はC言語のfscanfと同等。
<4> ファイルをクローズ
<5> FFT演算の実行。この時点では結果は複素数で得られている。
<6> FFT演算結果の複素数値から、絶対値を取得。(振幅特性)
<7> 6の結果をグラフにプロット。別ウィンドウでプロット結果が開く。

plot結果の例
image:images/scilab_plot_exsample_original.png[plot exsample original]
左から2つ目のアイコンをクリックし、範囲指定すれば、拡大もできる。
image:images/scilab_plot_exsample_zoom.png[plot exsample zoom]

=== 畳み込み演算

テキストとして保存したデータにFIRローパスフィルタの畳み込み演算を行う例。
ここではwfir関数で算出した係数を使っているが、自作したフィルタ係数でもいける。

----
cd ruby_project\
fp=mopen("dsd_data_2048sample.csv")
data=mfscanf(-1,fp,"%f")
mclose(fp)

ftype='lp' <1>
forder=256 <2>
cfreq=[0.015625 0] <3>
wtype='re' <4>
fpar=[0 0] <5>
[wft,wfm,fr]=wfir(ftype,forder,cfreq,wtype,fpar) <6>

sig_filterd=convol(wft,data) <7>
plot(sig_filterd)

----
<1> FIRフィルタのタイプを指定。 +lp+ はローパスフィルタ
<2> フィルタのタップ数
<3> サンプリング周波数の1/64をカットオフ周波数に指定
<4> 窓関数なし
<5> 窓関数のパラメータ。なし、なので[0 0]を指定。
<6> FIRフィルタの係数の算出。wftには時間領域フィルタ係数、
wfmグリッドfrの周波数領域フィルタ応答、fr周波数グリッド
<7> wftと適すテキストで読み込んだデータを畳み込み演算





